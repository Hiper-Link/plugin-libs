// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugin.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventsRequest struct {
	PluginInterface      string   `protobuf:"bytes,1,opt,name=pluginInterface,proto3" json:"pluginInterface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsRequest) Reset()         { *m = EventsRequest{} }
func (m *EventsRequest) String() string { return proto.CompactTextString(m) }
func (*EventsRequest) ProtoMessage()    {}
func (*EventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{0}
}

func (m *EventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsRequest.Unmarshal(m, b)
}
func (m *EventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsRequest.Marshal(b, m, deterministic)
}
func (m *EventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsRequest.Merge(m, src)
}
func (m *EventsRequest) XXX_Size() int {
	return xxx_messageInfo_EventsRequest.Size(m)
}
func (m *EventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventsRequest proto.InternalMessageInfo

func (m *EventsRequest) GetPluginInterface() string {
	if m != nil {
		return m.PluginInterface
	}
	return ""
}

type EventsResponse struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsResponse) Reset()         { *m = EventsResponse{} }
func (m *EventsResponse) String() string { return proto.CompactTextString(m) }
func (*EventsResponse) ProtoMessage()    {}
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{1}
}

func (m *EventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsResponse.Unmarshal(m, b)
}
func (m *EventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsResponse.Marshal(b, m, deterministic)
}
func (m *EventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsResponse.Merge(m, src)
}
func (m *EventsResponse) XXX_Size() int {
	return xxx_messageInfo_EventsResponse.Size(m)
}
func (m *EventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventsResponse proto.InternalMessageInfo

func (m *EventsResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type InteractionRequest struct {
	PluginInterface      string   `protobuf:"bytes,1,opt,name=pluginInterface,proto3" json:"pluginInterface,omitempty"`
	Function             string   `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InteractionRequest) Reset()         { *m = InteractionRequest{} }
func (m *InteractionRequest) String() string { return proto.CompactTextString(m) }
func (*InteractionRequest) ProtoMessage()    {}
func (*InteractionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{2}
}

func (m *InteractionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InteractionRequest.Unmarshal(m, b)
}
func (m *InteractionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InteractionRequest.Marshal(b, m, deterministic)
}
func (m *InteractionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteractionRequest.Merge(m, src)
}
func (m *InteractionRequest) XXX_Size() int {
	return xxx_messageInfo_InteractionRequest.Size(m)
}
func (m *InteractionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InteractionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InteractionRequest proto.InternalMessageInfo

func (m *InteractionRequest) GetPluginInterface() string {
	if m != nil {
		return m.PluginInterface
	}
	return ""
}

func (m *InteractionRequest) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

type InteractionResponse struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InteractionResponse) Reset()         { *m = InteractionResponse{} }
func (m *InteractionResponse) String() string { return proto.CompactTextString(m) }
func (*InteractionResponse) ProtoMessage()    {}
func (*InteractionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{3}
}

func (m *InteractionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InteractionResponse.Unmarshal(m, b)
}
func (m *InteractionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InteractionResponse.Marshal(b, m, deterministic)
}
func (m *InteractionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteractionResponse.Merge(m, src)
}
func (m *InteractionResponse) XXX_Size() int {
	return xxx_messageInfo_InteractionResponse.Size(m)
}
func (m *InteractionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InteractionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InteractionResponse proto.InternalMessageInfo

func (m *InteractionResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*EventsRequest)(nil), "proto.EventsRequest")
	proto.RegisterType((*EventsResponse)(nil), "proto.EventsResponse")
	proto.RegisterType((*InteractionRequest)(nil), "proto.InteractionRequest")
	proto.RegisterType((*InteractionResponse)(nil), "proto.InteractionResponse")
}

func init() {
	proto.RegisterFile("plugin.proto", fileDescriptor_22a625af4bc1cc87)
}

var fileDescriptor_22a625af4bc1cc87 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xc8, 0x29, 0x4d,
	0xcf, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x96, 0x5c, 0xbc,
	0xae, 0x65, 0xa9, 0x79, 0x25, 0xc5, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x1a, 0x5c,
	0xfc, 0x10, 0x75, 0x9e, 0x79, 0x25, 0xa9, 0x45, 0x69, 0x89, 0xc9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x9c, 0x41, 0xe8, 0xc2, 0x4a, 0x6a, 0x5c, 0x7c, 0x30, 0xad, 0xc5, 0x05, 0xf9, 0x79, 0xc5,
	0xa9, 0x42, 0x22, 0x5c, 0xac, 0x65, 0x89, 0x39, 0xa5, 0x10, 0x1d, 0x3c, 0x41, 0x10, 0x8e, 0x52,
	0x14, 0x97, 0x10, 0x58, 0x53, 0x62, 0x72, 0x49, 0x66, 0x7e, 0x1e, 0xc9, 0xf6, 0x08, 0x49, 0x71,
	0x71, 0xa4, 0x95, 0xe6, 0x81, 0x35, 0x4b, 0x30, 0x81, 0x95, 0xc0, 0xf9, 0x4a, 0xda, 0x5c, 0xc2,
	0x28, 0x66, 0x63, 0x73, 0x08, 0x27, 0xd4, 0x21, 0x46, 0x8b, 0x99, 0xb9, 0xd8, 0x02, 0xc0, 0x86,
	0x0b, 0x99, 0x72, 0xb1, 0xf9, 0xe7, 0xf9, 0xe4, 0x27, 0xa6, 0x08, 0x89, 0x40, 0xc2, 0x43, 0x0f,
	0x25, 0x14, 0xa4, 0x44, 0xd1, 0x44, 0xa1, 0xe6, 0x9a, 0x73, 0x71, 0xf8, 0xe7, 0x85, 0xe6, 0xe5,
	0x90, 0xac, 0xd1, 0x82, 0x8b, 0xd3, 0x3f, 0xcf, 0x33, 0xaf, 0xb8, 0x24, 0x31, 0x27, 0x87, 0x34,
	0x9d, 0x56, 0x5c, 0xdc, 0x20, 0x2b, 0x33, 0xc9, 0xd1, 0x6b, 0xc6, 0xc5, 0xee, 0x9f, 0x17, 0x5c,
	0x92, 0x58, 0x54, 0x42, 0x9a, 0x3e, 0x70, 0xe8, 0x04, 0x97, 0xe4, 0x17, 0x90, 0xa6, 0xcd, 0x85,
	0x8b, 0x1b, 0x29, 0x32, 0x84, 0x24, 0xa1, 0xaa, 0x30, 0x23, 0x5f, 0x4a, 0x0a, 0x9b, 0x14, 0xc4,
	0x94, 0x24, 0x36, 0xb0, 0x94, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xdc, 0xcc, 0x85, 0xaf,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PluginClient is the client API for Plugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PluginClient interface {
	OnLoad(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error)
	OnUnload(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error)
	OnInstall(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error)
	OnUninstall(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error)
	OnStart(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error)
	OnStop(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error)
	Interaction(ctx context.Context, in *InteractionRequest, opts ...grpc.CallOption) (*InteractionResponse, error)
}

type pluginClient struct {
	cc grpc.ClientConnInterface
}

func NewPluginClient(cc grpc.ClientConnInterface) PluginClient {
	return &pluginClient{cc}
}

func (c *pluginClient) OnLoad(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/proto.Plugin/OnLoad", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) OnUnload(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/proto.Plugin/OnUnload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) OnInstall(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/proto.Plugin/OnInstall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) OnUninstall(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/proto.Plugin/OnUninstall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) OnStart(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/proto.Plugin/OnStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) OnStop(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/proto.Plugin/OnStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) Interaction(ctx context.Context, in *InteractionRequest, opts ...grpc.CallOption) (*InteractionResponse, error) {
	out := new(InteractionResponse)
	err := c.cc.Invoke(ctx, "/proto.Plugin/Interaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PluginServer is the server API for Plugin service.
type PluginServer interface {
	OnLoad(context.Context, *EventsRequest) (*EventsResponse, error)
	OnUnload(context.Context, *EventsRequest) (*EventsResponse, error)
	OnInstall(context.Context, *EventsRequest) (*EventsResponse, error)
	OnUninstall(context.Context, *EventsRequest) (*EventsResponse, error)
	OnStart(context.Context, *EventsRequest) (*EventsResponse, error)
	OnStop(context.Context, *EventsRequest) (*EventsResponse, error)
	Interaction(context.Context, *InteractionRequest) (*InteractionResponse, error)
}

// UnimplementedPluginServer can be embedded to have forward compatible implementations.
type UnimplementedPluginServer struct {
}

func (*UnimplementedPluginServer) OnLoad(ctx context.Context, req *EventsRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnLoad not implemented")
}
func (*UnimplementedPluginServer) OnUnload(ctx context.Context, req *EventsRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnUnload not implemented")
}
func (*UnimplementedPluginServer) OnInstall(ctx context.Context, req *EventsRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnInstall not implemented")
}
func (*UnimplementedPluginServer) OnUninstall(ctx context.Context, req *EventsRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnUninstall not implemented")
}
func (*UnimplementedPluginServer) OnStart(ctx context.Context, req *EventsRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnStart not implemented")
}
func (*UnimplementedPluginServer) OnStop(ctx context.Context, req *EventsRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnStop not implemented")
}
func (*UnimplementedPluginServer) Interaction(ctx context.Context, req *InteractionRequest) (*InteractionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Interaction not implemented")
}

func RegisterPluginServer(s *grpc.Server, srv PluginServer) {
	s.RegisterService(&_Plugin_serviceDesc, srv)
}

func _Plugin_OnLoad_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).OnLoad(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/OnLoad",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).OnLoad(ctx, req.(*EventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_OnUnload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).OnUnload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/OnUnload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).OnUnload(ctx, req.(*EventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_OnInstall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).OnInstall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/OnInstall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).OnInstall(ctx, req.(*EventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_OnUninstall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).OnUninstall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/OnUninstall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).OnUninstall(ctx, req.(*EventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_OnStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).OnStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/OnStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).OnStart(ctx, req.(*EventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_OnStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).OnStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/OnStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).OnStop(ctx, req.(*EventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_Interaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InteractionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).Interaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/Interaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).Interaction(ctx, req.(*InteractionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Plugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Plugin",
	HandlerType: (*PluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OnLoad",
			Handler:    _Plugin_OnLoad_Handler,
		},
		{
			MethodName: "OnUnload",
			Handler:    _Plugin_OnUnload_Handler,
		},
		{
			MethodName: "OnInstall",
			Handler:    _Plugin_OnInstall_Handler,
		},
		{
			MethodName: "OnUninstall",
			Handler:    _Plugin_OnUninstall_Handler,
		},
		{
			MethodName: "OnStart",
			Handler:    _Plugin_OnStart_Handler,
		},
		{
			MethodName: "OnStop",
			Handler:    _Plugin_OnStop_Handler,
		},
		{
			MethodName: "Interaction",
			Handler:    _Plugin_Interaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plugin.proto",
}
